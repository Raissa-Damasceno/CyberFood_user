{"ast":null,"code":"var _jsxFileName = \"/Users/raissadamasceno/Desktop/Cyber/CyberFood_user/src/components/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingIndex];\n    let updatedItems;\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingIndex","findIndex","id","existingItem","updatedItems","updatedItem","concat","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/Users/raissadamasceno/Desktop/Cyber/CyberFood_user/src/components/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    const existingItem = state.items[existingIndex];\n\n    let updatedItems;\n\n    if (existingItem) {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingIndex];\n\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}